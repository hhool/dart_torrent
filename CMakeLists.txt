
# THIS FILE IS NOT USED FOR BUILDING THE LIBRARY, ONLY FOR IDE AUTOCOMPLETE.
# TO BUILD THIS LIBRARY, PLEASE USE THE `build.py` IN THE ROOT DIRECTORY.
message(WARNING "Use build.py for building")
cmake_minimum_required(VERSION 3.1)
project(dart_torrent LANGUAGES CXX C)
file(GLOB_RECURSE SRC_FILES src/*.c src/*.cpp)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} $SRC_FILES -Wall -DFMT_HEADER_ONLY -DTORRENT_HAVE_MMAP=0 -DTORRENT_NO_DEPRECATE -DTORRENT_DISABLE_SUPERSEEDING -DTORRENT_DISABLE_SHARE_MODE -DBOOST_ALL_NO_LIB -DBOOST_ASIO_ENABLE_CANCELIO -DBOOST_ASIO_HAS_STD_CHRONO -DBOOST_MULTI_INDEX_DISABLE_SERIALIZATION -DBOOST_NO_DEPRECATED -DBOOST_SYSTEM_NO_DEPRECATED -DBOOST_ASIO_DISABLE_EPOLL -DNDEBUG -O3 -DFMT_HEADER_ONLY -DTORRENT_HAVE_MMAP=0 -DTORRENT_NO_DEPRECATE -DTORRENT_DISABLE_SUPERSEEDING -DTORRENT_DISABLE_SHARE_MODE -DBOOST_ALL_NO_LIB -DBOOST_ASIO_ENABLE_CANCELIO -DBOOST_ASIO_HAS_STD_CHRONO -DBOOST_MULTI_INDEX_DISABLE_SERIALIZATION -DBOOST_NO_DEPRECATED -DBOOST_SYSTEM_NO_DEPRECATED -DBOOST_ASIO_DISABLE_EPOLL")
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_C_STANDARD 11)
find_package(Boost)
if (Boost_FOUND)
    include_directories(${Boost_INCLUDE_DIRS})
    link_directories(${Boost_LIBRARY_DIRS})
endif()
find_package(Libtorrent-Rasterbar)
if (Libtorrent-Rasterbar_FOUND)
    include_directories(${Libtorrent-Rasterbar_INCLUDE_DIR})
    link_directories(${Libtorrent-Rasterbar_LIBRARY_DIR})
endif()
include_directories(external/fmt/include external/sqlite3)